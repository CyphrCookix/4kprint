// Navigation and Scroll Functionality document.addEventListener('DOMContentLoaded',function (){// Navigation elements const header = document.getElementById('header');const navToggle = document.querySelector('.nav-toggle');const navMenu = document.querySelector('.nav-menu');const navOverlay = document.querySelector('.nav-overlay');const navLinks = document.querySelectorAll('.nav-link');// Scroll detection for sticky header function handleScroll(){const scrollTop = window.scrollY || document.documentElement.scrollTop;// Add/remove scrolled class based on scroll position if (scrollTop > 50){header.classList.add('scrolled')}else{header.classList.remove('scrolled')}}// Throttled scroll handler for better performance let ticking = false;function requestTick(){if (!ticking){requestAnimationFrame(handleScroll);ticking = true}}window.addEventListener('scroll',function (){requestTick();ticking = false});// Mobile menu toggle functionality function toggleMobileMenu(){const isMenuOpen = navMenu.classList.contains('mobile-active');if (isMenuOpen){closeMobileMenu()}else{openMobileMenu()}}// Open mobile menu function openMobileMenu(){navToggle.classList.add('active');navMenu.classList.add('mobile-active');if (navOverlay){navOverlay.classList.add('show')}// Add show class with slight delay for animation setTimeout(() =>{navMenu.classList.add('show')},10);// Prevent body scroll when menu is open document.body.style.overflow = 'hidden';// Update ARIA attributes navToggle.setAttribute('aria-expanded','true')}// Close mobile menu function closeMobileMenu(){navToggle.classList.remove('active');navMenu.classList.remove('show');if (navOverlay){navOverlay.classList.remove('show')}// Remove mobile-active class after animation setTimeout(() =>{navMenu.classList.remove('mobile-active')},300);document.body.style.overflow = '';// Update ARIA attributes navToggle.setAttribute('aria-expanded','false')}// Mobile menu toggle event if (navToggle){navToggle.addEventListener('click',toggleMobileMenu)}// Close mobile menu when clicking on nav links navLinks.forEach(link =>{link.addEventListener('click',function (e){// Close mobile menu if it's open if (navMenu.classList.contains('mobile-active')){closeMobileMenu()}// Handle smooth scroll to sections const href = this.getAttribute('href');if (href.startsWith('#')){e.preventDefault();const targetSection = document.querySelector(href);if (targetSection){const headerHeight = header.offsetHeight;const targetPosition = targetSection.offsetTop - headerHeight;window.scrollTo({top: targetPosition,behavior: 'smooth'})}}})});// Close mobile menu when clicking on overlay if (navOverlay){navOverlay.addEventListener('click',closeMobileMenu)}// Close mobile menu when clicking outside document.addEventListener('click',function (e){if (navMenu.classList.contains('mobile-active') && !navMenu.contains(e.target) && !navToggle.contains(e.target)){closeMobileMenu()}});// Close mobile menu on window resize window.addEventListener('resize',function (){if (window.innerWidth > 767 && navMenu.classList.contains('mobile-active')){closeMobileMenu()}});// Active navigation link highlighting function updateActiveNavLink(){const sections = document.querySelectorAll('section[id]');const scrollPos = window.scrollY + header.offsetHeight + 100;sections.forEach(section =>{const sectionTop = section.offsetTop;const sectionHeight = section.offsetHeight;const sectionId = section.getAttribute('id');const navLink = document.querySelector(`.nav-link[href="#${sectionId}"]`);if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight){// Remove active class from all nav links navLinks.forEach(link => link.classList.remove('active'));// Add active class to current section's nav link if (navLink){navLink.classList.add('active')}}})}// Update active nav link on scroll window.addEventListener('scroll',function (){if (!ticking){requestAnimationFrame(updateActiveNavLink);ticking = true}});// Initial call to set active nav link updateActiveNavLink();// Handle back to top functionality const backToTopLink = document.querySelector('.back-to-top');if (backToTopLink){backToTopLink.addEventListener('click',function (e){e.preventDefault();window.scrollTo({top: 0,behavior: 'smooth'})})}// Enhanced scroll indicator functionality const scrollIndicator = document.querySelector('.scroll-indicator');if (scrollIndicator){let isScrolling = false;let scrollTimeout;let pulseTimeout;// Add accessibility attributes scrollIndicator.setAttribute('role','button');scrollIndicator.setAttribute('aria-label','Scroll to about section');scrollIndicator.setAttribute('tabindex','0');// Enhanced click handler with smooth animation function handleScrollClick(){if (isScrolling) return;// Prevent multiple clicks during scroll const aboutSection = document.querySelector('#about');if (aboutSection){isScrolling = true;scrollIndicator.style.pointerEvents = 'none';const headerHeight = header.offsetHeight;const targetPosition = aboutSection.offsetTop - headerHeight;// Add visual feedback scrollIndicator.classList.add('fade-out');// Smooth scroll with callback window.scrollTo({top: targetPosition,behavior: 'smooth'});// Reset after scroll completes setTimeout(() =>{isScrolling = false;scrollIndicator.style.pointerEvents = 'auto';scrollIndicator.classList.remove('fade-out')},1000)}}// Click handler scrollIndicator.addEventListener('click',handleScrollClick);// Enhanced keyboard support scrollIndicator.addEventListener('keydown',function (e){if (e.key === 'Enter' || e.key === ' '){e.preventDefault();handleScrollClick()}});// Touch support for mobile let touchStartY = 0;scrollIndicator.addEventListener('touchstart',function(e){touchStartY = e.touches[0].clientY;this.style.transform = 'translateX(-50%) scale(0.95)'},{passive: true});scrollIndicator.addEventListener('touchend',function(e){this.style.transform = '';const touchEndY = e.changedTouches[0].clientY;const touchDiff = touchStartY - touchEndY;// If user swiped up,trigger scroll if (touchDiff > 10){handleScrollClick()}},{passive: true});// Enhanced scroll behavior with throttling let ticking = false;function updateScrollIndicator(){const heroSection = document.querySelector('.hero');if (heroSection){const heroBottom = heroSection.offsetTop + heroSection.offsetHeight;const scrollPosition = window.scrollY || window.pageYOffset;const scrollProgress = scrollPosition / (heroBottom - 200);// Fade out gradually as user scrolls if (scrollPosition > heroBottom - 200){const opacity = Math.max(0,1 - scrollProgress);scrollIndicator.style.opacity = opacity;scrollIndicator.style.transform = `translateX(-50%) scale(${Math.max(0.8,1 - scrollProgress * 0.2)})`;if (opacity <= 0.1){scrollIndicator.style.pointerEvents = 'none'}}else{scrollIndicator.style.opacity = '1';scrollIndicator.style.transform = 'translateX(-50%) scale(1)';scrollIndicator.style.pointerEvents = 'auto'}// Add pulse effect if user hasn't scrolled for a while clearTimeout(pulseTimeout);scrollIndicator.classList.remove('pulse');if (scrollPosition < 50){pulseTimeout = setTimeout(() =>{scrollIndicator.classList.add('pulse')},3000)}}ticking = false}function requestTick(){if (!ticking){requestAnimationFrame(updateScrollIndicator);ticking = true}}// Throttled scroll listener window.addEventListener('scroll',requestTick);// Initial call updateScrollIndicator();// Add pulse effect after initial load setTimeout(() =>{if ((window.scrollY || window.pageYOffset) < 50){scrollIndicator.classList.add('pulse')}},5000);// Mouse enter/leave effects scrollIndicator.addEventListener('mouseenter',function(){this.classList.remove('pulse')});scrollIndicator.addEventListener('mouseleave',function(){if ((window.scrollY || window.pageYOffset) < 50){setTimeout(() =>{this.classList.add('pulse')},2000)}})}// Keyboard navigation support document.addEventListener('keydown',function (e){// Close mobile menu with Escape key if (e.key === 'Escape' && navMenu.classList.contains('mobile-active')){closeMobileMenu()}// Toggle mobile menu with Enter or Space on nav toggle if ((e.key === 'Enter' || e.key === ' ') && e.target === navToggle){e.preventDefault();toggleMobileMenu()}});// Make nav toggle focusable and accessible if (navToggle){navToggle.setAttribute('tabindex','0');navToggle.setAttribute('role','button');navToggle.setAttribute('aria-label','Toggle navigation menu');navToggle.setAttribute('aria-expanded','false');navToggle.setAttribute('aria-controls','nav-menu');// Add ID to nav menu for accessibility navMenu.setAttribute('id','nav-menu');navMenu.setAttribute('role','navigation');navMenu.setAttribute('aria-label','Main navigation');// Update aria-expanded when menu toggles const observer = new MutationObserver(function (mutations){mutations.forEach(function (mutation){if (mutation.type === 'attributes' && mutation.attributeName === 'class'){const isActive = navToggle.classList.contains('active');navToggle.setAttribute('aria-expanded',isActive.toString())}})});observer.observe(navToggle,{attributes: true})}// Smooth scroll polyfill for older browsers if (!('scrollBehavior' in document.documentElement.style)){// Simple smooth scroll implementation function smoothScrollTo(target,duration = 800){const start = window.scrollY || document.documentElement.scrollTop;const distance = target - start;let startTime = null;function animation(currentTime){if (startTime === null) startTime = currentTime;const timeElapsed = currentTime - startTime;const run = ease(timeElapsed,start,distance,duration);window.scrollTo(0,run);if (timeElapsed < duration) requestAnimationFrame(animation)}function ease(t,b,c,d){t /= d / 2;if (t < 1) return c / 2 * t * t + b;t--;return -c / 2 * (t * (t - 2) - 1) + b}requestAnimationFrame(animation)}// Override smooth scroll behavior for nav links navLinks.forEach(link =>{link.addEventListener('click',function (e){const href = this.getAttribute('href');if (href.startsWith('#')){e.preventDefault();const targetSection = document.querySelector(href);if (targetSection){const headerHeight = header.offsetHeight;const targetPosition = targetSection.offsetTop - headerHeight;smoothScrollTo(targetPosition)}}})})}});// Enhanced Contact form functionality with error handling document.addEventListener('DOMContentLoaded',function (){const contactForm = document.getElementById('contactForm');const formSuccess = document.getElementById('formSuccess');if (contactForm){// Add real-time validation const formInputs = contactForm.querySelectorAll('.form-input,.form-textarea');formInputs.forEach(input =>{input.addEventListener('blur',function(){validateField(this)});input.addEventListener('input',function(){// Clear error on input const errorElement = document.getElementById(this.name + 'Error');if (errorElement && errorElement.textContent){errorElement.textContent = '';this.classList.remove('error')}})});contactForm.addEventListener('submit',function (e){e.preventDefault();// Get form data const formData = new FormData(contactForm);const name = formData.get('name').trim();const email = formData.get('email').trim();const message = formData.get('message').trim();// Clear previous errors clearFormErrors();// Validate form let isValid = true;if (!name){showFormError('nameError','Name is required','name');isValid = false}else if (name.length < 2){showFormError('nameError','Name must be at least 2 characters','name');isValid = false}if (!email){showFormError('emailError','Email is required','email');isValid = false}else if (!isValidEmail(email)){showFormError('emailError','Please enter a valid email address','email');isValid = false}if (!message){showFormError('messageError','Message is required','message');isValid = false}else if (message.length < 10){showFormError('messageError','Message must be at least 10 characters','message');isValid = false}if (isValid){submitForm(formData)}})}function validateField(field){const value = field.value.trim();const fieldName = field.name;let isValid = true;switch (fieldName){case 'name': if (!value){showFormError('nameError','Name is required','name');isValid = false}else if (value.length < 2){showFormError('nameError','Name must be at least 2 characters','name');isValid = false}break;case 'email': if (!value){showFormError('emailError','Email is required','email');isValid = false}else if (!isValidEmail(value)){showFormError('emailError','Please enter a valid email address','email');isValid = false}break;case 'message': if (!value){showFormError('messageError','Message is required','message');isValid = false}else if (value.length < 10){showFormError('messageError','Message must be at least 10 characters','message');isValid = false}break}if (isValid){const errorElement = document.getElementById(fieldName + 'Error');if (errorElement){errorElement.textContent = ''}field.classList.remove('error')}return isValid}function submitForm(formData){const submitButton = contactForm.querySelector('.btn-submit');const originalText = submitButton.textContent;// Show loading state submitButton.textContent = 'Sending...';submitButton.disabled = true;submitButton.classList.add('loading');// Simulate form submission with error handling const simulateSubmission = new Promise((resolve,reject) =>{setTimeout(() =>{// Simulate random failure for demonstration (remove in production) if (Math.random() > 0.8){reject(new Error('Network error occurred'))}else{resolve('Form submitted successfully')}},2000)});simulateSubmission .then(() =>{// Success contactForm.reset();formSuccess.classList.add('show');// Hide success message after 5 seconds setTimeout(() =>{formSuccess.classList.remove('show')},5000)}) .catch((error) =>{// Error handling showFormError('submitError','Failed to send message. Please try again.',null);console.error('Form submission error:',error)}) .finally(() =>{// Reset button state submitButton.textContent = originalText;submitButton.disabled = false;submitButton.classList.remove('loading')})}function showFormError(errorId,message,fieldName){const errorElement = document.getElementById(errorId);if (errorElement){errorElement.textContent = message;errorElement.style.display = 'block'}if (fieldName){const field = document.getElementById(fieldName);if (field){field.classList.add('error')}}}function clearFormErrors(){const errorElements = document.querySelectorAll('.form-error');errorElements.forEach(element =>{element.textContent = '';element.style.display = 'none'});const errorFields = document.querySelectorAll('.form-input.error,.form-textarea.error');errorFields.forEach(field =>{field.classList.remove('error')})}function isValidEmail(email){const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;return emailRegex.test(email)}});// Portfolio Functionality with Enhanced Performance Optimizations document.addEventListener('DOMContentLoaded',function (){// Enhanced Lazy Loading Implementation with WebP Support and Error Handling const portfolioImages = document.querySelectorAll('.portfolio-image picture img[data-src],.portfolio-image img[data-src]');// WebP support detection function supportsWebP(){const canvas = document.createElement('canvas');canvas.width = 1;canvas.height = 1;return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0}const webpSupported = supportsWebP();// Create error placeholder image function createErrorPlaceholder(){const canvas = document.createElement('canvas');canvas.width = 300;canvas.height = 200;const ctx = canvas.getContext('2d');// Draw error placeholder ctx.fillStyle = '#f5f5f5';ctx.fillRect(0,0,300,200);ctx.fillStyle = '#e94560';ctx.font = '16px Arial';ctx.textAlign = 'center';ctx.fillText('Image unavailable',150,100);ctx.fillText('Click to retry',150,120);return canvas.toDataURL()}const errorPlaceholder = createErrorPlaceholder();// Progressive image loading with multiple formats function loadImageWithFallback(img,originalSrc){return new Promise((resolve,reject) =>{const imageContainer = img.closest('.portfolio-image');let attempts = 0;const maxAttempts = 3;function tryLoad(src){attempts++;const testImg = new Image();testImg.onload = function(){img.src = src;img.classList.add('loaded');imageContainer.classList.remove('loading');imageContainer.classList.remove('error');resolve(src)};testImg.onerror = function(){if (attempts < maxAttempts){// Retry with delay setTimeout(() => tryLoad(src),1000 * attempts)}else{// Show error state img.src = errorPlaceholder;img.alt = 'Image failed to load - Click to retry';imageContainer.classList.remove('loading');imageContainer.classList.add('error');// Add retry functionality const retryHandler = function(){imageContainer.classList.add('loading');imageContainer.classList.remove('error');attempts = 0;tryLoad(originalSrc);img.removeEventListener('click',retryHandler)};img.addEventListener('click',retryHandler);img.style.cursor = 'pointer';reject(new Error(`Failed to load image after ${maxAttempts}attempts`))}};testImg.src = src}// Try WebP first if supported,then fallback to original if (webpSupported && originalSrc.includes('.webp')){tryLoad(originalSrc)}else if (webpSupported && !originalSrc.includes('.webp')){// Try to load WebP version first const webpSrc = originalSrc.replace(/\.(jpg|jpeg|png)$/i,'.webp');const testWebP = new Image();testWebP.onload = () => tryLoad(webpSrc);testWebP.onerror = () => tryLoad(originalSrc);testWebP.src = webpSrc}else{tryLoad(originalSrc)}})}const imageObserver = new IntersectionObserver((entries,observer) =>{entries.forEach(entry =>{if (entry.isIntersecting){const img = entry.target;const originalSrc = img.dataset.src;if (originalSrc){loadImageWithFallback(img,originalSrc) .then(() =>{img.removeAttribute('data-src')}) .catch(error =>{console.warn('Image loading failed:',error.message,originalSrc)})}observer.unobserve(img)}})},{rootMargin: '50px 0px',threshold: 0.1});portfolioImages.forEach(img =>{imageObserver.observe(img)});// Lightbox Functionality const portfolioItems = document.querySelectorAll('.portfolio-item');const lightbox = document.getElementById('portfolioLightbox');const lightboxImage = document.getElementById('lightboxImage');const lightboxTitle = document.getElementById('lightboxTitle');const lightboxCategory = document.getElementById('lightboxCategory');const lightboxClose = document.getElementById('lightboxClose');const lightboxPrev = document.getElementById('lightboxPrev');const lightboxNext = document.getElementById('lightboxNext');let currentImageIndex = 0;let portfolioData = [];// Initialize portfolio data portfolioItems.forEach((item,index) =>{const img = item.querySelector('img');const title = item.dataset.title || 'Untitled Project';const category = item.dataset.category || 'Uncategorized';const imageSrc = img.src || img.dataset.src;portfolioData.push({index: index,title: title,category: category,imageSrc: imageSrc,element: item});// Add click event to portfolio item item.addEventListener('click',function (e){e.preventDefault();currentImageIndex = index;openLightbox()});// Add keyboard support item.addEventListener('keydown',function (e){if (e.key === 'Enter' || e.key === ' '){e.preventDefault();currentImageIndex = index;openLightbox()}});// Make portfolio items focusable item.setAttribute('tabindex','0');item.setAttribute('role','button');item.setAttribute('aria-label',`View ${title}- ${category}`)});// Open lightbox function openLightbox(){if (portfolioData.length === 0) return;const currentItem = portfolioData[currentImageIndex];// Set lightbox content lightboxImage.src = currentItem.imageSrc;lightboxImage.alt = `${currentItem.title}- ${currentItem.category}`;lightboxTitle.textContent = currentItem.title;lightboxCategory.textContent = currentItem.category;// Show lightbox lightbox.classList.add('active');document.body.style.overflow = 'hidden';// Focus management lightboxClose.focus();// Update navigation buttons updateNavigationButtons()}// Close lightbox function closeLightbox(){lightbox.classList.remove('active');document.body.style.overflow = '';// Return focus to the portfolio item that opened the lightbox if (portfolioData[currentImageIndex]){portfolioData[currentImageIndex].element.focus()}}// Navigate to previous image function showPreviousImage(){currentImageIndex = (currentImageIndex - 1 + portfolioData.length) % portfolioData.length;updateLightboxContent()}// Navigate to next image function showNextImage(){currentImageIndex = (currentImageIndex + 1) % portfolioData.length;updateLightboxContent()}// Update lightbox content function updateLightboxContent(){const currentItem = portfolioData[currentImageIndex];// Add loading state lightboxImage.style.opacity = '0.5';// Update content lightboxImage.src = currentItem.imageSrc;lightboxImage.alt = `${currentItem.title}- ${currentItem.category}`;lightboxTitle.textContent = currentItem.title;lightboxCategory.textContent = currentItem.category;// Remove loading state when image loads lightboxImage.onload = function (){lightboxImage.style.opacity = '1'};updateNavigationButtons()}// Update navigation button states function updateNavigationButtons(){if (portfolioData.length <= 1){lightboxPrev.style.display = 'none';lightboxNext.style.display = 'none'}else{lightboxPrev.style.display = 'flex';lightboxNext.style.display = 'flex'}}// Event listeners for lightbox controls if (lightboxClose){lightboxClose.addEventListener('click',closeLightbox)}if (lightboxPrev){lightboxPrev.addEventListener('click',showPreviousImage)}if (lightboxNext){lightboxNext.addEventListener('click',showNextImage)}// Close lightbox when clicking on background if (lightbox){lightbox.addEventListener('click',function (e){if (e.target === lightbox){closeLightbox()}})}// Keyboard navigation for lightbox document.addEventListener('keydown',function (e){if (!lightbox.classList.contains('active')) return;switch (e.key){case 'Escape': closeLightbox();break;case 'ArrowLeft': e.preventDefault();showPreviousImage();break;case 'ArrowRight': e.preventDefault();showNextImage();break}});// Touch/swipe support for mobile let touchStartX = 0;let touchEndX = 0;if (lightbox){lightbox.addEventListener('touchstart',function (e){touchStartX = e.changedTouches[0].screenX},{passive: true});lightbox.addEventListener('touchend',function (e){touchEndX = e.changedTouches[0].screenX;handleSwipe()},{passive: true})}function handleSwipe(){const swipeThreshold = 50;const swipeDistance = touchEndX - touchStartX;if (Math.abs(swipeDistance) > swipeThreshold){if (swipeDistance > 0){// Swipe right - show previous showPreviousImage()}else{// Swipe left - show next showNextImage()}}}});// Enhanced Smooth Scroll Functionality document.addEventListener('DOMContentLoaded',function(){// Smooth scroll configuration const SCROLL_CONFIG ={duration: 800,easing: 'easeInOutCubic',offset: 80 // Header height offset};// Easing functions const easingFunctions ={linear: function(t){return t},easeInOutCubic: function(t){return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1},easeOutQuart: function(t){return 1 - (--t) * t * t * t}};// Enhanced smooth scroll function function smoothScrollTo(targetPosition,duration = SCROLL_CONFIG.duration,easing = SCROLL_CONFIG.easing){const startPosition = window.scrollY || window.pageYOffset;const distance = targetPosition - startPosition;let startTime = null;function animation(currentTime){if (startTime === null) startTime = currentTime;const timeElapsed = currentTime - startTime;const progress = Math.min(timeElapsed / duration,1);const easedProgress = easingFunctions[easing] ? easingFunctions[easing](progress) : easingFunctions.easeInOutCubic(progress);const currentPosition = startPosition + (distance * easedProgress);window.scrollTo(0,currentPosition);if (timeElapsed < duration){requestAnimationFrame(animation)}}requestAnimationFrame(animation)}// Get header height dynamically function getHeaderHeight(){const header = document.getElementById('header');return header ? header.offsetHeight : SCROLL_CONFIG.offset}// Handle all anchor links with smooth scrolling function initializeSmoothScroll(){const anchorLinks = document.querySelectorAll('a[href^="#"]');anchorLinks.forEach(link =>{link.addEventListener('click',function(e){const href = this.getAttribute('href');// Skip if href is just "#" if (href === '#'){e.preventDefault();window.scrollTo({top: 0,behavior: 'smooth'});return}const targetElement = document.querySelector(href);if (targetElement){e.preventDefault();const headerHeight = getHeaderHeight();const targetPosition = targetElement.offsetTop - headerHeight;// Use native smooth scroll if supported,otherwise use custom implementation if ('scrollBehavior' in document.documentElement.style){window.scrollTo({top: targetPosition,behavior: 'smooth'})}else{smoothScrollTo(targetPosition)}// Update URL hash after scroll completes setTimeout(() =>{if (history.pushState){history.pushState(null,null,href)}else{location.hash = href}},SCROLL_CONFIG.duration)}})})}// Handle browser back/forward navigation function handleHashChange(){const hash = window.location.hash;if (hash){const targetElement = document.querySelector(hash);if (targetElement){setTimeout(() =>{const headerHeight = getHeaderHeight();const targetPosition = targetElement.offsetTop - headerHeight;if ('scrollBehavior' in document.documentElement.style){window.scrollTo({top: targetPosition,behavior: 'smooth'})}else{smoothScrollTo(targetPosition)}},100)}}}// Scroll to section on page load if hash exists function handleInitialHash(){const hash = window.location.hash;if (hash){// Delay to ensure page is fully loaded setTimeout(() =>{const targetElement = document.querySelector(hash);if (targetElement){const headerHeight = getHeaderHeight();const targetPosition = targetElement.offsetTop - headerHeight;window.scrollTo(0,targetPosition)}},300)}}// Keyboard navigation for smooth scrolling function handleKeyboardNavigation(){document.addEventListener('keydown',function(e){// Page Up/Down with smooth scrolling if (e.key === 'PageUp' || e.key === 'PageDown'){e.preventDefault();const viewportHeight = window.innerHeight;const currentPosition = window.scrollY || window.pageYOffset;const targetPosition = e.key === 'PageUp' ? Math.max(0,currentPosition - viewportHeight * 0.8) : currentPosition + viewportHeight * 0.8;if ('scrollBehavior' in document.documentElement.style){window.scrollTo({top: targetPosition,behavior: 'smooth'})}else{smoothScrollTo(targetPosition,600)}}// Home/End keys if (e.key === 'Home' && e.ctrlKey){e.preventDefault();if ('scrollBehavior' in document.documentElement.style){window.scrollTo({top: 0,behavior: 'smooth'})}else{smoothScrollTo(0)}}if (e.key === 'End' && e.ctrlKey){e.preventDefault();const documentHeight = Math.max( document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight );const targetPosition = documentHeight - window.innerHeight;if ('scrollBehavior' in document.documentElement.style){window.scrollTo({top: targetPosition,behavior: 'smooth'})}else{smoothScrollTo(targetPosition)}}})}// Intersection Observer for section visibility function initializeSectionObserver(){const sections = document.querySelectorAll('section[id]');const navLinks = document.querySelectorAll('.nav-link');const observerOptions ={root: null,rootMargin: `-${getHeaderHeight()}px 0px -50% 0px`,threshold: 0};const sectionObserver = new IntersectionObserver((entries) =>{entries.forEach(entry =>{if (entry.isIntersecting){const sectionId = entry.target.getAttribute('id');const activeNavLink = document.querySelector(`.nav-link[href="#${sectionId}"]`);// Remove active class from all nav links navLinks.forEach(link => link.classList.remove('active'));// Add active class to current section's nav link if (activeNavLink){activeNavLink.classList.add('active')}}})},observerOptions);sections.forEach(section =>{sectionObserver.observe(section)})}// Scroll progress indicator (optional enhancement) function createScrollProgressIndicator(){const progressBar = document.createElement('div');progressBar.className = 'scroll-progress';progressBar.style.cssText = ` position: fixed;top: 0;left: 0;width: 0%;height: 3px;background: linear-gradient(90deg,#e94560,#ffd700);z-index: 9999;transition: width 0.1s ease;`;document.body.appendChild(progressBar);function updateScrollProgress(){const scrollTop = window.scrollY || window.pageYOffset;const documentHeight = document.documentElement.scrollHeight - window.innerHeight;const scrollPercent = (scrollTop / documentHeight) * 100;progressBar.style.width = scrollPercent + '%'}window.addEventListener('scroll',updateScrollProgress);updateScrollProgress();// Initial call}// Initialize all smooth scroll functionality function init(){initializeSmoothScroll();handleInitialHash();handleKeyboardNavigation();initializeSectionObserver();// Optional: Add scroll progress indicator // createScrollProgressIndicator();// Handle hash changes (browser navigation) window.addEventListener('hashchange',handleHashChange);// Re-initialize on dynamic content changes const observer = new MutationObserver((mutations) =>{let shouldReinit = false;mutations.forEach((mutation) =>{if (mutation.type === 'childList'){mutation.addedNodes.forEach((node) =>{if (node.nodeType === 1 && node.querySelector('a[href^="#"]')){shouldReinit = true}})}});if (shouldReinit){initializeSmoothScroll()}});observer.observe(document.body,{childList: true,subtree: true})}// Start initialization init();// Expose smooth scroll function globally for external use window.smoothScrollTo = smoothScrollTo});// Responsive and Touch Interaction Enhancements document.addEventListener('DOMContentLoaded',function (){// ===== RESPONSIVE UTILITIES ===== // Viewport detection and responsive breakpoint management const breakpoints ={mobile: 767,tablet: 1023,desktop: 1024};function getCurrentBreakpoint(){const width = window.innerWidth;if (width <= breakpoints.mobile) return 'mobile';if (width <= breakpoints.tablet) return 'tablet';return 'desktop'}// Update CSS custom properties based on viewport function updateViewportProperties(){const vw = window.innerWidth;const vh = window.innerHeight;document.documentElement.style.setProperty('--vw',`${vw}px`);document.documentElement.style.setProperty('--vh',`${vh}px`);document.documentElement.style.setProperty('--current-breakpoint',getCurrentBreakpoint())}// ===== TOUCH INTERACTION ENHANCEMENTS ===== // Enhanced touch feedback for interactive elements function addTouchFeedback(){const touchElements = document.querySelectorAll('.btn,.service-tile,.portfolio-item,.nav-link');touchElements.forEach(element =>{// Add touch start feedback element.addEventListener('touchstart',function(e){this.classList.add('touch-active')},{passive: true});// Remove touch feedback element.addEventListener('touchend',function(e){setTimeout(() =>{this.classList.remove('touch-active')},150)},{passive: true});// Handle touch cancel element.addEventListener('touchcancel',function(e){this.classList.remove('touch-active')},{passive: true})})}// ===== MOBILE NAVIGATION ENHANCEMENTS ===== // Improved mobile menu with better touch handling function enhanceMobileNavigation(){const navMenu = document.querySelector('.nav-menu');const navToggle = document.querySelector('.nav-toggle');if (!navMenu || !navToggle) return;let touchStartY = 0;let touchEndY = 0;// Add swipe to close functionality for mobile menu navMenu.addEventListener('touchstart',function(e){touchStartY = e.changedTouches[0].screenY},{passive: true});navMenu.addEventListener('touchend',function(e){touchEndY = e.changedTouches[0].screenY;handleMenuSwipe()},{passive: true});function handleMenuSwipe(){const swipeThreshold = 100;const swipeDistance = touchStartY - touchEndY;// Swipe up to close menu if (swipeDistance > swipeThreshold && navMenu.classList.contains('mobile-active')){const closeMobileMenuEvent = new CustomEvent('closeMobileMenu');document.dispatchEvent(closeMobileMenuEvent)}}}// ===== FORM ENHANCEMENTS FOR MOBILE ===== // Improve form interactions on mobile devices function enhanceFormInteractions(){const formInputs = document.querySelectorAll('.form-input,.form-select,.form-textarea');formInputs.forEach(input =>{// Prevent zoom on focus for iOS if (/iPad|iPhone|iPod/.test(navigator.userAgent)){input.addEventListener('focus',function(){this.style.fontSize = '16px'});input.addEventListener('blur',function(){this.style.fontSize = ''})}// Enhanced focus states for better accessibility input.addEventListener('focus',function(){this.parentElement.classList.add('form-group-focused')});input.addEventListener('blur',function(){this.parentElement.classList.remove('form-group-focused')})})}// ===== SCROLL ENHANCEMENTS ===== // Smooth scroll behavior with momentum for mobile function enhanceScrollBehavior(){// Add momentum scrolling for iOS document.body.style.webkitOverflowScrolling = 'touch';// Prevent scroll bounce on iOS document.addEventListener('touchmove',function(e){if (e.target.closest('.nav-menu.mobile-active') || e.target.closest('.lightbox.active')){return}const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;const scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;const clientHeight = document.documentElement.clientHeight || window.innerHeight;if (scrollTop === 0 && e.touches[0].clientY > e.touches[0].clientY){e.preventDefault()}if (scrollTop + clientHeight >= scrollHeight && e.touches[0].clientY < e.touches[0].clientY){e.preventDefault()}},{passive: false})}// ===== PERFORMANCE OPTIMIZATIONS ===== // Debounced resize handler for better performance function debounce(func,wait){let timeout;return function executedFunction(...args){const later = () =>{clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout = setTimeout(later,wait)}}// Optimized resize handler const handleResize = debounce(function(){updateViewportProperties();// Trigger custom resize event for other components const customResizeEvent = new CustomEvent('optimizedResize',{detail:{breakpoint: getCurrentBreakpoint(),width: window.innerWidth,height: window.innerHeight}});document.dispatchEvent(customResizeEvent)},250);// ===== ACCESSIBILITY ENHANCEMENTS ===== // Improve keyboard navigation function enhanceKeyboardNavigation(){// Add visible focus indicators document.addEventListener('keydown',function(e){if (e.key === 'Tab'){document.body.classList.add('keyboard-navigation')}});document.addEventListener('mousedown',function(){document.body.classList.remove('keyboard-navigation')});// Enhanced focus management for interactive elements const focusableElements = document.querySelectorAll( 'a[href],button,input,textarea,select,[tabindex]:not([tabindex="-1"])' );focusableElements.forEach(element =>{element.addEventListener('focus',function(){this.classList.add('focused')});element.addEventListener('blur',function(){this.classList.remove('focused')})})}// ===== DEVICE-SPECIFIC OPTIMIZATIONS ===== // Detect and optimize for different devices function optimizeForDevice(){const userAgent = navigator.userAgent.toLowerCase();const isIOS = /ipad|iphone|ipod/.test(userAgent);const isAndroid = /android/.test(userAgent);const isMobile = /mobile/.test(userAgent);// Add device-specific classes if (isIOS) document.body.classList.add('ios-device');if (isAndroid) document.body.classList.add('android-device');if (isMobile) document.body.classList.add('mobile-device');// iOS-specific optimizations if (isIOS){// Fix viewport height issues on iOS function setVH(){const vh = window.innerHeight * 0.01;document.documentElement.style.setProperty('--vh-ios',`${vh}px`)}setVH();window.addEventListener('resize',setVH);window.addEventListener('orientationchange',setVH)}// Android-specific optimizations if (isAndroid){// Improve touch responsiveness on Android document.body.style.touchAction = 'manipulation'}}// ===== ORIENTATION CHANGE HANDLING ===== function handleOrientationChange(){window.addEventListener('orientationchange',function(){// Delay to ensure viewport has updated setTimeout(() =>{updateViewportProperties();// Trigger custom orientation change event const orientationEvent = new CustomEvent('optimizedOrientationChange',{detail:{orientation: window.orientation,breakpoint: getCurrentBreakpoint()}});document.dispatchEvent(orientationEvent)},100)})}// ===== INITIALIZATION ===== // Initialize all enhancements function init(){updateViewportProperties();addTouchFeedback();enhanceMobileNavigation();enhanceFormInteractions();enhanceScrollBehavior();enhanceKeyboardNavigation();optimizeForDevice();handleOrientationChange();// Add event listeners window.addEventListener('resize',handleResize);// Add responsive classes to body document.body.classList.add(`breakpoint-${getCurrentBreakpoint()}`);// Update breakpoint class on resize document.addEventListener('optimizedResize',function(e){// Remove old breakpoint classes document.body.classList.remove('breakpoint-mobile','breakpoint-tablet','breakpoint-desktop');// Add current breakpoint class document.body.classList.add(`breakpoint-${e.detail.breakpoint}`)})}// Initialize when DOM is ready init();// ===== PUBLIC API ===== // Expose utilities for other scripts window.ResponsiveTouch ={getCurrentBreakpoint,updateViewportProperties,breakpoints}});// Interactive Animations and Smooth Transitions document.addEventListener('DOMContentLoaded',function (){// ===== SCROLL-TRIGGERED ANIMATIONS ===== // Animation configuration const ANIMATION_CONFIG ={threshold: 0.1,rootMargin: '0px 0px -50px 0px',duration: 800,stagger: 100};// Animation classes and their configurations const animationClasses ={'fade-in':{initial:{opacity: 0,transform: 'translateY(30px)'},animate:{opacity: 1,transform: 'translateY(0)'}},'fade-in-left':{initial:{opacity: 0,transform: 'translateX(-50px)'},animate:{opacity: 1,transform: 'translateX(0)'}},'fade-in-right':{initial:{opacity: 0,transform: 'translateX(50px)'},animate:{opacity: 1,transform: 'translateX(0)'}},'fade-in-up':{initial:{opacity: 0,transform: 'translateY(50px)'},animate:{opacity: 1,transform: 'translateY(0)'}},'scale-in':{initial:{opacity: 0,transform: 'scale(0.8)'},animate:{opacity: 1,transform: 'scale(1)'}},'slide-in-up':{initial:{opacity: 0,transform: 'translateY(100px)'},animate:{opacity: 1,transform: 'translateY(0)'}}};// Performance-optimized animation function function animateElement(element,animationType,delay = 0){const config = animationClasses[animationType];if (!config) return;// Apply initial state Object.assign(element.style,{opacity: config.initial.opacity,transform: config.initial.transform,transition: `all ${ANIMATION_CONFIG.duration}ms cubic-bezier(0.4,0,0.2,1) ${delay}ms`});// Trigger animation requestAnimationFrame(() =>{requestAnimationFrame(() =>{Object.assign(element.style,{opacity: config.animate.opacity,transform: config.animate.transform})})})}// Intersection Observer for scroll-triggered animations const animationObserver = new IntersectionObserver((entries) =>{entries.forEach((entry,index) =>{if (entry.isIntersecting){const element = entry.target;const animationType = element.dataset.animation || 'fade-in';const delay = parseInt(element.dataset.delay) || index * ANIMATION_CONFIG.stagger;// Add animation class for CSS-based animations element.classList.add('animate-in');// Apply JavaScript-based animation animateElement(element,animationType,delay);// Unobserve after animation animationObserver.unobserve(element)}})},{threshold: ANIMATION_CONFIG.threshold,rootMargin: ANIMATION_CONFIG.rootMargin});// Initialize scroll animations function initializeScrollAnimations(){// Add animation attributes to elements const sectionsToAnimate = [{selector: '.section-title',animation: 'fade-in-up',delay: 0},{selector: '.section-subtitle',animation: 'fade-in-up',delay: 100},{selector: '.about-image',animation: 'fade-in-left',delay: 0},{selector: '.about-text',animation: 'fade-in-right',delay: 200},{selector: '.service-tile',animation: 'scale-in',stagger: true},{selector: '.portfolio-item',animation: 'fade-in-up',stagger: true},{selector: '.contact-form',animation: 'fade-in-left',delay: 0},{selector: '.contact-info',animation: 'fade-in-right',delay: 200}];sectionsToAnimate.forEach(({selector,animation,delay,stagger}) =>{const elements = document.querySelectorAll(selector);elements.forEach((element,index) =>{element.dataset.animation = animation;element.dataset.delay = stagger ? index * ANIMATION_CONFIG.stagger : (delay || 0);// Set initial state to prevent flash element.style.opacity = '0';element.style.transform = animationClasses[animation].initial.transform;animationObserver.observe(element)})})}// ===== ENHANCED HOVER EFFECTS ===== // Service tiles enhanced hover effects function enhanceServiceTileHovers(){const serviceTiles = document.querySelectorAll('.service-tile');serviceTiles.forEach(tile =>{const icon = tile.querySelector('.service-icon');const title = tile.querySelector('.service-title');const description = tile.querySelector('.service-description');tile.addEventListener('mouseenter',function(){// Enhanced hover animation this.style.transform = 'translateY(-12px) scale(1.03)';this.style.boxShadow = '0 25px 50px rgba(233,69,96,0.2)';if (icon){icon.style.transform = 'scale(1.2) rotate(10deg)';icon.style.background = 'linear-gradient(135deg,var(--color-accent-magenta),#d63651)'}if (title){title.style.transform = 'translateY(-3px)';title.style.color = 'var(--color-accent-magenta)'}if (description){description.style.transform = 'translateY(-2px)';description.style.color = '#444'}});tile.addEventListener('mouseleave',function(){// Reset animations this.style.transform = '';this.style.boxShadow = '';if (icon){icon.style.transform = '';icon.style.background = ''}if (title){title.style.transform = '';title.style.color = ''}if (description){description.style.transform = '';description.style.color = ''}})})}// Portfolio items enhanced hover effects function enhancePortfolioHovers(){const portfolioItems = document.querySelectorAll('.portfolio-item');portfolioItems.forEach(item =>{const image = item.querySelector('.portfolio-image img');const overlay = item.querySelector('.portfolio-overlay');const info = item.querySelector('.portfolio-info');item.addEventListener('mouseenter',function(){this.style.transform = 'translateY(-10px) scale(1.03)';this.style.boxShadow = '0 25px 50px rgba(0,0,0,0.2)';if (image){image.style.transform = 'scale(1.1)'}if (info){info.style.transform = 'translateY(0) scale(1.05)'}});item.addEventListener('mouseleave',function(){this.style.transform = '';this.style.boxShadow = '';if (image){image.style.transform = ''}if (info){info.style.transform = ''}})})}// ===== MICRO-INTERACTIONS ===== // Button micro-interactions function addButtonMicroInteractions(){const buttons = document.querySelectorAll('.btn');buttons.forEach(button =>{// Ripple effect on click button.addEventListener('click',function(e){const ripple = document.createElement('span');const rect = this.getBoundingClientRect();const size = Math.max(rect.width,rect.height);const x = e.clientX - rect.left - size / 2;const y = e.clientY - rect.top - size / 2;ripple.style.cssText = ` position: absolute;width: ${size}px;height: ${size}px;left: ${x}px;top: ${y}px;background: rgba(255,255,255,0.3);border-radius: 50%;transform: scale(0);animation: ripple 0.6s ease-out;pointer-events: none;`;this.style.position = 'relative';this.style.overflow = 'hidden';this.appendChild(ripple);setTimeout(() =>{ripple.remove()},600)});// Enhanced hover states button.addEventListener('mouseenter',function(){this.style.transform = 'translateY(-3px) scale(1.02)'});button.addEventListener('mouseleave',function(){this.style.transform = ''})})}// Form field micro-interactions function addFormMicroInteractions(){const formFields = document.querySelectorAll('.form-input,.form-textarea,.form-select');formFields.forEach(field =>{const formGroup = field.closest('.form-group');const label = formGroup?.querySelector('.form-label');field.addEventListener('focus',function(){if (formGroup){formGroup.style.transform = 'translateY(-2px)';formGroup.style.transition = 'transform 0.3s ease'}if (label){label.style.color = 'var(--color-accent-magenta)';label.style.transform = 'scale(1.05)';label.style.transition = 'all 0.3s ease'}this.style.borderColor = 'var(--color-accent-magenta)';this.style.boxShadow = '0 0 0 3px rgba(233,69,96,0.1)'});field.addEventListener('blur',function(){if (formGroup){formGroup.style.transform = ''}if (label){label.style.color = '';label.style.transform = ''}if (!this.value){this.style.borderColor = '';this.style.boxShadow = ''}})})}// Navigation link micro-interactions function addNavMicroInteractions(){const navLinks = document.querySelectorAll('.nav-link');navLinks.forEach(link =>{link.addEventListener('mouseenter',function(){this.style.transform = 'translateY(-2px)';this.style.transition = 'all 0.3s ease'});link.addEventListener('mouseleave',function(){this.style.transform = ''})})}// ===== SCROLL PROGRESS INDICATOR ===== function createScrollProgressIndicator(){const progressBar = document.createElement('div');progressBar.className = 'scroll-progress-bar';progressBar.style.cssText = ` position: fixed;top: 0;left: 0;width: 0%;height: 3px;background: linear-gradient(90deg,var(--color-accent-magenta),var(--color-highlight-yellow));z-index: 9999;transition: width 0.1s ease;opacity: 0;`;document.body.appendChild(progressBar);let ticking = false;function updateScrollProgress(){const scrollTop = window.scrollY || window.pageYOffset;const documentHeight = document.documentElement.scrollHeight - window.innerHeight;const scrollPercent = Math.min((scrollTop / documentHeight) * 100,100);progressBar.style.width = scrollPercent + '%';progressBar.style.opacity = scrollTop > 100 ? '1' : '0';ticking = false}function requestTick(){if (!ticking){requestAnimationFrame(updateScrollProgress);ticking = true}}window.addEventListener('scroll',requestTick);updateScrollProgress();// Initial call}// ===== PARALLAX EFFECTS ===== function addParallaxEffects(){const parallaxElements = document.querySelectorAll('.hero-background');if (parallaxElements.length === 0) return;let ticking = false;function updateParallax(){const scrollTop = window.scrollY || window.pageYOffset;parallaxElements.forEach(element =>{const speed = 0.5;// Parallax speed const yPos = -(scrollTop * speed);element.style.transform = `translateY(${yPos}px)`});ticking = false}function requestTick(){if (!ticking){requestAnimationFrame(updateParallax);ticking = true}}window.addEventListener('scroll',requestTick)}// ===== PERFORMANCE MONITORING ===== function monitorAnimationPerformance(){let frameCount = 0;let lastTime = performance.now();function measureFPS(){frameCount++;const currentTime = performance.now();if (currentTime >= lastTime + 1000){const fps = Math.round((frameCount * 1000) / (currentTime - lastTime));// If FPS drops below 30,reduce animations if (fps < 30){document.body.classList.add('reduce-animations');console.warn('Low FPS detected,reducing animations')}else if (fps > 50){document.body.classList.remove('reduce-animations')}frameCount = 0;lastTime = currentTime}requestAnimationFrame(measureFPS)}// Start monitoring after initial load setTimeout(() =>{requestAnimationFrame(measureFPS)},2000)}// ===== REDUCED MOTION SUPPORT ===== function handleReducedMotion(){const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');function setReducedMotion(mediaQuery){if (mediaQuery.matches){document.body.classList.add('reduce-motion');// Disable complex animations const animatedElements = document.querySelectorAll('[data-animation]');animatedElements.forEach(element =>{element.style.transition = 'none';element.style.animation = 'none';element.style.opacity = '1';element.style.transform = 'none'})}else{document.body.classList.remove('reduce-motion')}}setReducedMotion(prefersReducedMotion);prefersReducedMotion.addListener(setReducedMotion)}// ===== INITIALIZATION ===== function init(){try{// Check for reduced motion preference first handleReducedMotion();// Only initialize animations if not reduced motion if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches){initializeScrollAnimations();enhanceServiceTileHovers();enhancePortfolioHovers();addButtonMicroInteractions();addFormMicroInteractions();addNavMicroInteractions();createScrollProgressIndicator();addParallaxEffects();monitorAnimationPerformance()}// Add CSS for animations addAnimationCSS();console.log('âœ… Animations initialized successfully')}catch (error){console.error('âŒ Animation initialization failed:',error);// Fallback: ensure basic functionality still works document.body.classList.add('reduce-animations')}}// Add CSS for animations function addAnimationCSS(){const style = document.createElement('style');style.textContent = ` @keyframes ripple{to{transform: scale(2);opacity: 0}}.scroll-progress-bar{will-change: width}.animate-in{will-change: opacity,transform}.reduce-animations *{animation-duration: 0.1s !important;transition-duration: 0.1s !important}.reduce-animations .parallax{transform: none !important}.service-tile,.portfolio-item,.btn{will-change: transform,box-shadow}@media (hover: none) and (pointer: coarse){.service-tile:hover,.portfolio-item:hover,.btn:hover{transform: none !important}}`;document.head.appendChild(style)}// Initialize animations init();// Expose animation utilities window.AnimationUtils ={animateElement,ANIMATION_CONFIG,animationClasses}});